<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ifxcode.dao.LoginlogMapper" >

  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" >  
      <property name="timeToIdleSeconds" value="3600"/>
      <property name="timeToLiveSeconds" value="3600"/>
      <property name="maxEntriesLocalHeap" value="1000"/>  
      <property name="maxEntriesLocalDisk" value="10000000"/>  
      <property name="memoryStoreEvictionPolicy" value="LRU"/>  
  </cache>

  <resultMap id="BaseResultMap" type="cn.ifxcode.model.Loginlog" >
    <id column="loginid" property="loginid" jdbcType="INTEGER" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="loginip" property="loginip" jdbcType="VARCHAR" />
    <result column="loginfrom" property="loginfrom" jdbcType="VARCHAR" />
    <result column="logintime" property="logintime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    loginid, loginname, loginip, logintime, loginfrom
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loginlog
    where loginid = #{loginid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loginlog
    where loginid = #{loginid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ifxcode.model.Loginlog" >
    insert into loginlog (loginid, loginname, loginip, loginfrom,
      logintime)
    values (#{loginid,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, #{loginip,jdbcType=VARCHAR}, 
     #{loginfrom,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.ifxcode.model.Loginlog" >
    insert into loginlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginid != null" >
        loginid,
      </if>
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="loginip != null" >
        loginip,
      </if>
      <if test="logintime != null" >
        logintime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginid != null" >
        #{loginid,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ifxcode.model.Loginlog" >
    update loginlog
    <set >
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        loginip = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        logintime = #{logintime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where loginid = #{loginid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ifxcode.model.Loginlog" >
    update loginlog
    set loginname = #{loginname,jdbcType=VARCHAR},
      loginip = #{loginip,jdbcType=VARCHAR},
      logintime = #{logintime,jdbcType=TIMESTAMP}
    where loginid = #{loginid,jdbcType=INTEGER}
  </update>
  <select id="findLoginlogPageCondition" resultMap="BaseResultMap" parameterType="cn.ifxcode.bean.PageInfo">
  	select login.* from loginlog as login
  	<where>
  		<if test="condition.loginname != null and condition.loginname != ''">
  			login.loginname = #{condition.loginname}
  		</if>
  		<if test="condition.starttime != null and condition.starttime !=''">
  			<![CDATA[
            login.logintime >= #{condition.starttime}
           ]]>
  		</if>
  		<if test="condition.endtime != null and condition.endtime !=''">
  			<![CDATA[
            and login.logintime <= #{condition.endtime}
           ]]>
  		</if>
  	</where>
  	order by login.logintime desc
  	limit #{from},#{size}
  </select>
  <select id="findLoginlogPageCount" parameterType="cn.ifxcode.bean.PageInfo" resultType="java.lang.Integer">
  	select count(*) count from loginlog as login
  	<where>
  		<if test="condition.loginname != null and condition.loginname != ''">
  			login.loginname = #{condition.loginname}
  		</if>
  		<if test="condition.starttime != null and condition.starttime !=''">
  			<![CDATA[
            login.logintime >= #{condition.starttime}
           ]]>
  		</if>
  		<if test="condition.endtime != null and condition.endtime !=''">
  			<![CDATA[
            and login.logintime <= #{condition.endtime}
           ]]>
  		</if>
  	</where>
  </select>
</mapper>